/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DashboardRecepcionista;

import ConexionPostgreSQL.ConexionDB;
import Controlador.HistorialCitasController;
import Vista.InicioDeSesion;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Date;
/**
 *
 * @author rober
 */
public class CitasAgendadas extends javax.swing.JFrame {

    public CitasAgendadas() {
        initComponents();
        this.setLocationRelativeTo(null);
        cargarHistorialCitas();
        configurarEventoSeleccionTabla();
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCerrarSesion = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHistorialC = new javax.swing.JTable();
        btnMostrar = new javax.swing.JButton();
        btnUsuarios = new javax.swing.JButton();
        btnPacientes = new javax.swing.JButton();
        btnMedicos = new javax.swing.JButton();
        txtTelefonoF = new javax.swing.JTextField();
        txtCorreoF = new javax.swing.JTextField();
        txtEstatusF = new javax.swing.JTextField();
        txtApellidoF = new javax.swing.JTextField();
        txtCurpF = new javax.swing.JTextField();
        txtHoraF = new javax.swing.JTextField();
        txtNombreF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnLimpiarFields = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(970, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCerrarSesion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCerrarSesion.setText("Cerrar sesion");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 810, 170, 30));

        jPanel2.setBackground(new java.awt.Color(255, 224, 110));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 240, 80, 200));

        jPanel1.setBackground(new java.awt.Color(200, 207, 255));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 380, 100));

        tablaHistorialC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Hora", "Fecha", "Estatus", "Nombre", "Apellido", "Correo", "Telefono", "CURP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaHistorialC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaHistorialCMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaHistorialC);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 470, 880, 330));

        btnMostrar.setText("Mostrar todo");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 810, -1, -1));

        btnUsuarios.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUsuarios.setText("Registrar pacientes");
        btnUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuariosActionPerformed(evt);
            }
        });
        getContentPane().add(btnUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 170, 30));

        btnPacientes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPacientes.setText("Citas agendadas");
        getContentPane().add(btnPacientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, 170, 30));

        btnMedicos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnMedicos.setText("Agendar cita");
        btnMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicosActionPerformed(evt);
            }
        });
        getContentPane().add(btnMedicos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, 170, 30));

        txtTelefonoF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoFActionPerformed(evt);
            }
        });
        getContentPane().add(txtTelefonoF, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 340, 240, 30));

        txtCorreoF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoFActionPerformed(evt);
            }
        });
        getContentPane().add(txtCorreoF, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 290, 240, 30));

        txtEstatusF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstatusFActionPerformed(evt);
            }
        });
        getContentPane().add(txtEstatusF, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 240, 240, 30));

        txtApellidoF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoFActionPerformed(evt);
            }
        });
        getContentPane().add(txtApellidoF, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 220, 30));

        txtCurpF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurpFActionPerformed(evt);
            }
        });
        getContentPane().add(txtCurpF, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 220, 30));

        txtHoraF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoraFActionPerformed(evt);
            }
        });
        getContentPane().add(txtHoraF, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 180, 110, 30));

        txtNombreF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreFActionPerformed(evt);
            }
        });
        getContentPane().add(txtNombreF, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, 220, 30));

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 180, -1, -1));

        btnLimpiarFields.setText("Limpiar");
        btnLimpiarFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarFieldsActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiarFields, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 420, -1, -1));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 180, 120, 30));

        jLabel19.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel19.setText("Telefono:");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 340, -1, 30));

        jLabel18.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel18.setText("Correo del paciente:");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 290, -1, 30));

        jLabel17.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel17.setText("Estatus de la cita:");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 240, -1, 30));

        jLabel16.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel16.setText("Hora:");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 180, -1, 30));

        jLabel15.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel15.setText("Fecha:");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 180, -1, 30));

        jLabel14.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel14.setText("Apellido:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, -1, 30));

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel7.setText("Nombre:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 70, 30));

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel6.setText("CURP:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, -1, 30));

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        jLabel5.setText("CITAS AGENDADAS");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Cuenta");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setText("MEDICAL CENTER");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 170, -1));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 22)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 255));
        jLabel2.setText("VITALIS");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Dashboard Admin.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHoraFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoraFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoraFActionPerformed

    private void tablaHistorialCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaHistorialCMouseClicked
    
    }//GEN-LAST:event_tablaHistorialCMouseClicked

    private void txtCurpFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurpFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurpFActionPerformed

    private void btnLimpiarFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarFieldsActionPerformed
txtCurpF.setText("");
    txtNombreF.setText("");
    txtApellidoF.setText("");
    txtHoraF.setText("");
    txtEstatusF.setText("");
    txtCorreoF.setText("");
    txtTelefonoF.setText(""); 
    }//GEN-LAST:event_btnLimpiarFieldsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here
    String curp = txtCurpF.getText().trim();
    java.util.Date fechaSeleccionada = jDateChooser1.getDate();
    String horaTexto = txtHoraF.getText().trim();

    // Convertir la fecha seleccionada a java.sql.Date
    java.sql.Date sqlFecha = fechaSeleccionada != null ? new java.sql.Date(fechaSeleccionada.getTime()) : null;

    // Validar hora si no está vacía
    if (!horaTexto.isEmpty() && horaTexto.length() == 5) {
        horaTexto += ":00"; // Agregar segundos si solo tiene HH:mm
    }

    try {
        // Obtener resultados de la búsqueda
        HistorialCitasController controlador = new HistorialCitasController();
        ArrayList<HashMap<String, String>> listaCitas = controlador.buscarCitas(curp, sqlFecha, horaTexto);

        // Mostrar los resultados en la tabla
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaHistorialC.getModel();
        modeloTabla.setRowCount(0); // Limpiar la tabla

        for (HashMap<String, String> cita : listaCitas) {
            modeloTabla.addRow(new Object[]{
                cita.get("hora"),
                cita.get("fecha"),
                cita.get("estatus"),
                cita.get("nombre"),
                cita.get("apellido"),
                cita.get("correo"),
                cita.get("telefono"),
                cita.get("curp")
            });
        }

        if (listaCitas.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No se encontraron citas con los filtros proporcionados.");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "Error al buscar citas: " + ex.getMessage());
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtApellidoFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoFActionPerformed

    private void txtNombreFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreFActionPerformed

    private void txtEstatusFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstatusFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstatusFActionPerformed

    private void txtCorreoFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoFActionPerformed

    private void txtTelefonoFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoFActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        // TODO add your handling code here:
        cargarHistorialCitas();
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicosActionPerformed
        // TODO add your handling code here:
        AgendarCitas agendarC = new AgendarCitas();
        agendarC.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnMedicosActionPerformed

    private void btnUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuariosActionPerformed
        // TODO add your handling code here:
        RegistroPacientes regPaciente1 = new RegistroPacientes();
        regPaciente1.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnUsuariosActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        // TODO add your handling code here:
        dispose();
        InicioDeSesion inSes = new InicioDeSesion();
        inSes.setVisible(true);
    }//GEN-LAST:event_btnCerrarSesionActionPerformed
    
    
    private void cargarHistorialCitas() {
    DefaultTableModel modeloTabla = (DefaultTableModel) tablaHistorialC.getModel();
    modeloTabla.setRowCount(0); // Limpiar la tabla antes de agregar nuevos datos

    try (Connection conn = ConexionDB.conectar()) {
        // Crear una instancia del controlador
        HistorialCitasController controlador = new HistorialCitasController();
        ArrayList<HashMap<String, String>> listaCitas = controlador.obtenerCitas(conn);

        // Llenar la tabla con los datos obtenidos
        for (HashMap<String, String> cita : listaCitas) {
            modeloTabla.addRow(new Object[]{
                cita.get("hora"),
                cita.get("fecha"),
                cita.get("estatus"),
                cita.get("nombre"),
                cita.get("apellido"),
                cita.get("correo"),
                cita.get("telefono"),
                cita.get("curp")
            });
        }
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar el historial de citas: " + e.getMessage());
        }
    }
    
    private void configurarEventoSeleccionTabla() {
    tablaHistorialC.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting()) { // Evitar múltiples eventos al seleccionar
            int selectedRow = tablaHistorialC.getSelectedRow();

            if (selectedRow != -1) { // Si hay una fila seleccionada
                // Obtener los datos de la fila seleccionada
                String hora = tablaHistorialC.getValueAt(selectedRow, 0).toString();
                String fecha = tablaHistorialC.getValueAt(selectedRow, 1).toString();
                String estatus = tablaHistorialC.getValueAt(selectedRow, 2).toString();
                String nombre = tablaHistorialC.getValueAt(selectedRow, 3).toString();
                String apellido = tablaHistorialC.getValueAt(selectedRow, 4).toString();
                String correo = tablaHistorialC.getValueAt(selectedRow, 5).toString();
                String telefono = tablaHistorialC.getValueAt(selectedRow, 6).toString();
                String curp = tablaHistorialC.getValueAt(selectedRow, 7).toString();

                // Mostrar los datos en las cajas de texto
                txtCurpF.setText(curp);
                txtNombreF.setText(nombre);
                txtApellidoF.setText(apellido);
                txtHoraF.setText(hora);
                txtEstatusF.setText(estatus);
                txtCorreoF.setText(correo);
                txtTelefonoF.setText(telefono);

                // Configurar la fecha en el JDateChooser
                try {
                    java.util.Date fechaSeleccionada = new SimpleDateFormat("yyyy-MM-dd").parse(fecha);
                    jDateChooser1.setDate(fechaSeleccionada);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error al establecer la fecha: " + e.getMessage());
                }
            }
        }
    });
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CitasAgendadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CitasAgendadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CitasAgendadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CitasAgendadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CitasAgendadas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnLimpiarFields;
    private javax.swing.JButton btnMedicos;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnPacientes;
    private javax.swing.JButton btnUsuarios;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaHistorialC;
    private javax.swing.JTextField txtApellidoF;
    private javax.swing.JTextField txtCorreoF;
    private javax.swing.JTextField txtCurpF;
    private javax.swing.JTextField txtEstatusF;
    private javax.swing.JTextField txtHoraF;
    private javax.swing.JTextField txtNombreF;
    private javax.swing.JTextField txtTelefonoF;
    // End of variables declaration//GEN-END:variables
}
